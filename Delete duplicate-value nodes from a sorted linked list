#!/bin/python3

import math
import os
import random
import re
import sys

class SinglyLinkedListNode:
    def __init__(self, node_data):
        self.data = node_data
        self.next = None

class SinglyLinkedList:
    def __init__(self):
        self.head = None
        self.tail = None

    def insert_node(self, node_data):
        node = SinglyLinkedListNode(node_data)

        if not self.head:
            self.head = node
        else:
            self.tail.next = node


        self.tail = node

def print_singly_linked_list(node, sep, fptr):
    while node:
        fptr.write(str(node.data))

        node = node.next

        if node:
            fptr.write(sep)
            
def remove(head,position):
    temp=head
    for j in range(position-1):
        temp=temp.next

    tbr=temp.next
    temp.next=tbr.next
    tbr.next=None


def removeDuplicates(head):
    # Write your code here
    temp=head
    i=0

    while (temp.next is not None):
        print(i)
        if(temp.data == temp.next.data):
            i+=1
            remove(head,i)
            i-=1
        else:
            temp=temp.next
            i+=1
    return head

if __name__ == '__main__':
